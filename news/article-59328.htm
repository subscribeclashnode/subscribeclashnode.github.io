<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://subscribeclashnode.github.io/news/article-59328.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>如何快速实现一个颜色选择器_在线工具</title>
        <meta name="description" content="在做前端界面开发的时候，遇到需要改变颜色的需求，就需要使用颜色选择器。 针对这个问题，第一想法，自然是H5提供了input color，可以实现。但不出意外的，IE并不支持。而且，chrome的实现方" />
        <link rel="icon" href="/assets/website/img/subscribeclashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="SubscribeClashNode订阅节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://subscribeclashnode.github.io/news/article-59328.htm" />
    <meta property="og:site_name" content="SubscribeClashNode订阅节点站" />
    <meta property="og:title" content="如何快速实现一个颜色选择器_在线工具" />
    <meta property="og:image" content="https://subscribeclashnode.github.io/uploads/20240607/5ea3090a159a3b6d771abf92a44cfd6c.webp" />
        <meta property="og:release_date" content="2025-02-19T06:37:18" />
    <meta property="og:updated_time" content="2025-02-19T06:37:18" />
        <meta property="og:description" content="在做前端界面开发的时候，遇到需要改变颜色的需求，就需要使用颜色选择器。 针对这个问题，第一想法，自然是H5提供了input color，可以实现。但不出意外的，IE并不支持。而且，chrome的实现方" />
        
    <!-- CSS FILES -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="如何快速实现一个颜色选择器_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="/assets/website/css/subscribeclashnode/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/subscribeclashnode/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/css/subscribeclashnode/magnific-popup.css" rel="stylesheet">
    <link href="/assets/website/css/subscribeclashnode/tooplate-waso-strategy.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KPWBEXR622"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KPWBEXR622');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="projects-detail-page" id="section_1" data-page="detail">
        <nav class="navbar navbar-expand-lg bg-white shadow-lg">
        <div class="container">
            <a href="/" class="xcblog-blog-logo">
                        <span>Subscribe <b class="text-danger">ClashNode</b></span>
                        </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div>
        </div>
    </nav>
    <main>
        <section class="hero section-hero section-padding">
            <div class="container">
                <div class="row">
                    <div class="col-12 text-center mx-auto">
                        <div class="section-hero-text">
                            <h1 class="text-white">如何快速实现一个颜色选择器_在线工具</h1>
                            <small class="small-title text-warning">
                                <a href="/" class="text-warning">首页</a> / <a href="/news/" class="text-warning">新闻资讯</a> / <span>正文</span>
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <section class="about section-padding" id="section_2">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>在做前端界面开发的时候，遇到需要改变颜色的需求，就需要使用颜色选择器。<br /> 针对这个问题，第一想法，自然是H5提供了input color，可以实现。但不出意外的，IE并不支持。而且，chrome的实现方式和firefox也不太一样，见下图：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/6a1dd4cb21f977ec3b8125ee26541ce2.jpg" alt="如何快速实现一个颜色选择器_在线工具"><br /> 左图是chrome的，浏览器自身实现的一个颜色选择器控件；右图是firefox的，引入的是操作系统自带的颜色选择器控件。<br /> 鉴于这些差异性，就很有必要实现一个统一的颜色选择器组件，譬如我们来实现一个类似chrome浏览器自带的这种选择器。<br /> 要做这个组件，首先需要了解的一个知识点，就是颜色模型。</p> <h2 id="颜色模型">颜色模型</h2> <p>我们前端开发，最常见的颜色模型就是RGB，即红绿蓝三基色模型，而前端浏览器能支持颜色显示的颜色模型只有两种：RGB和HSL。<br /> 其中，RGB模型是以三色的值在0-255以内的范围内，混合成一种颜色，对机器较友好，但并不太适合人直观的进行颜色选择。所以，通常的颜色选择器一般会使用另外两种更面向视觉感知的模型：<code>HSV</code> 和 <code>HSL</code>。关于颜色模型的详细知识，可见 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/jimojianghu/p/15511924.html"  target="_blank"  rel="nofollow"><code>颜色模型的基础知识</code></a>。<br /> 而chrome浏览器自带的颜色选择器，就是基于HSV的。</p> <h3 id="hsv-与-hsl-的区别">HSV 与 HSL 的区别</h3> <p>HSV是基于色相H(hue)、饱和度S(saturation)、明度V(Value)；HSL基于色相H(hue)、饱和度S(saturation)、亮度L(lightness)。<br /> 其中<code>色相</code>是一样的，本质都是一种颜色值。<br /> 在这两个模型中，色相是以六大主色为基础，分别按60度的间隔排列在圆环上。<br /> 这六大主色分别是：<strong>0°红、60°黄、120°绿、180°青、240°蓝、300°洋红、360°红</strong>。<br /> 而在前端进行布局设计时，常常把圆环处理成长方形的色块，通过颜色的线性渐变方式进行分段处理，角度换算成一定的比例，如下所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/d071208b9264ac5441afc14b7e3eb0cc.jpg" alt="如何快速实现一个颜色选择器_在线工具"><br /> 而<code>饱和度</code>和<code>明亮度</code>都是有区别的，为方便理解颜色选择器，本文概括简单的描述，如下：</p> <ul> <li>HSV中的S饱和度，反映色相颜色中混入白色的值，呈现白色到色相颜色的变化；</li> <li>HSL中的S饱和度，反映色相颜色中混入灰色的值，呈现的是一种从灰色到色相颜色的变化。</li> <li>HSV中的V明度，体现的是从黑色到色相(H)颜色的过渡。</li> <li>HSL中的L亮度，体现的是从黑色到色相(H)颜色再到白色的过渡。</li> </ul> <p>另外需要明确的是，各个部分的取值范围：Hue色相：0 - 360；饱和度和明亮度都是：0 ~ 100%。<br /> 具体的实现上的差别，我们可以接着往下看。</p> <h2 id="实现选择器">实现选择器</h2> <h3 id="色相">色相</h3> <p>色相的原理上面已经介绍了，HSV和HSL一样。落实到代码层面的话，也是很好实现的，以css和div的方式，只需要进行颜色的线性渐变即可：</p> <pre><code class="language-html">&lt;div class="div-bar"&gt;   &lt;!-- 色相柱 --&gt;   &lt;div id="colorBar" class="color-bar"&gt;&lt;/div&gt;   &lt;!-- 滑动块 --&gt;   &lt;div id="divSlider" class="div-slider"&gt;&lt;/div&gt; &lt;/div&gt; </code></pre> <pre><code class="language-css">.div-bar {   position: relative;   width: 10px;   height: 200px;   margin-left:15px;   cursor: pointer; } .color-bar {   background: linear-gradient(180deg, #f00, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00);   width: 10px;   height: 200px;   margin-left: 20px; } .div-slider {   ...   width: 8px;   height: 8px; } </code></pre> <p>这里是竖向的色相柱，宽高10 * 200，如果需要横向的改动宽高布局即可。</p> <h4 id="计算色相柱的滑块位置">计算色相柱的滑块位置</h4> <p>要想移动滑块获取位置信息，首先需要监听色相柱上的鼠标事件，具体如下：</p> <pre><code class="language-js">  colorBar.addEventListener('mousedown', function(e) {     setHueSlider(e)     document.addEventListener('mousemove', setHueSlider)   })   document.addEventListener('mouseup', function() {     document.removeEventListener('mousemove', setHueSlider)   }) </code></pre> <p>在setHueSlider函数中需要处理的，就是滑块点在色相柱上的位置，然后通过计算比例得到一个hue值：</p> <pre><code class="language-js">  const clientRect = colorBar.getBoundingClientRect()   // 获取位置信息，色柱高度-colorBarHEIGHT   let yDiff = event.clientY - clientRect.top   yDiff = yDiff &gt; colorBarHEIGHT ? colorBarHEIGHT : (yDiff &lt; 0 ? 0 : yDiff)   // 设置滑块的位置，防止滑块脱离色柱   const yTop = yDiff &lt; 9 ? 0 : (yDiff - 9)   divSlider.style.top = yTop + 'px'    // 色相在360度以内，计算对应的比例值， 0 - 360   color.hue = Math.round((yDiff / colorBarHEIGHT) * 360 * 100) / 100 | 0 </code></pre> <p>通过色相柱的滑块位置比例的计算，我们就能得到对应的色相值了。</p> <h3 id="饱和度和明亮度">饱和度和明亮度</h3> <p>除了色相柱以外，我们还需要设定一个基于饱和度和明亮度的颜色面板，这时候，上面对于这两块的区别介绍，就有了用武之地。<br /> 颜色面板一般是一个长方形的区域，以HSV为例，上面提到，HSV的饱和度可以简化为白色到色相颜色的变化，如果当前的色相颜色是红色，则<code>饱和度就是白色到红色的变化</code>；而<code>明亮度则体现的是黑色到红色的变化</code>。我们在设计面板的时候，以一个长方形的面板区域：</p> <ul> <li>如果把面板的背景色设置为色相颜色-红色；</li> <li>从左到右设置饱和度，可在白色上设置从左至右的透明度变化，即最左边白色，到最右边的完全透明，线性渐变；</li> <li>从下到上设置明亮度，就可在最下面黑色，到最上面的完全透明，线性渐变。</li> </ul> <p>如此则可简化HSV模型里的颜色面板，在具体的实现上，可以通过下面的这个图来理解：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/d308be6da8ed6a9a7935d19de7515605.jpg" alt="如何快速实现一个颜色选择器_在线工具"><br /> 当然，饱和度和明亮度在水平或者垂直方向上是可以调换的。</p> <p>要设置颜色面板，使用div+css即可，在代码实现上有多种方式，下面介绍的只使用一个div的方式，实现一个宽高300 * 200的颜色面板，(其他的方式还有使用两个div或者使用伪类等等)：</p> <pre><code class="language-html">&lt;div class="div-panel"&gt;   &lt;!-- 颜色面板 --&gt;   &lt;div id ="colorPanel" class="color-panel" style="background-color: #f00;"&gt;&lt;/div&gt;   &lt;!-- 滑块 --&gt;   &lt;div id="divPicker" class="div-picker"&gt;&lt;/div&gt; &lt;/div&gt; </code></pre> <pre><code class="language-css">.div-panel {   position: relative;   width: 300px;   height: 200px;   cursor: pointer;   overflow: hidden; } .color-panel {   position: relative;   height: 200px;   width: 300px;   background: linear-gradient(to top, #000, transparent), linear-gradient(to right, #FFF, transparent); } .div-picker {   ...   width: 12px;   height: 12px; } </code></pre> <h4 id="计算这两个值">计算这两个值</h4> <p>仍然是需要监听鼠标事件，获取鼠标位置信息，事件监听与色相的基本一样，都是监听鼠标的三个事件，这里略过。<br /> 直接看如何计算饱和度和明亮度，根据前面的介绍与布局实现，我们定义的<code>面板横向X轴是饱和度</code>，<code>面板纵向Y轴是明亮度</code>，于是可以如下计算：</p> <pre><code class="language-js">  // 计算鼠标移动位置，面板宽度panelWIDTH，高度panelHEIGHT   const clientRect = colorPanel.getBoundingClientRect()   let yDiff = event.clientY - clientRect.top   let xDiff = event.clientX - clientRect.left   xDiff = xDiff &gt; panelWIDTH ? panelWIDTH : (xDiff &lt; 0 ? 0 : xDiff)   yDiff = yDiff &gt; panelHEIGHT ? panelHEIGHT : (yDiff &lt; 0 ? 0 : yDiff)    // 设置滑块位置，保证滑块至少一半在面板内   const yTop = yDiff - 6   const xLeft = xDiff - 6   divPicker.style.top = yTop + 'px'   divPicker.style.left = xLeft + 'px'    // 饱和度和明度，这里没有取百分比的值，后续转换时需要注意   color.saturation = Math.round(xDiff / panelWIDTH * 100)   color.value = Math.round((1 - yDiff / panelHEIGHT) * 100) </code></pre> <h3 id="hsv转rgb">hsv转rgb</h3> <p>通过这样的计算，就能获取HSV对应的三个值了，后面就可以进行转换成对应RGB颜色值。</p> <pre><code class="language-js">  const hsvToRgb = function (hue, saturation, value) {     saturation = saturation * 255 / 100 | 0     value = value * 255 / 100 | 0      if (saturation === 0) {       return [value, value, value]     } else {       satVal = (255 - saturation) * value / 255 | 0       ligVal = (value - satVal) * (hue % 60) / 60 | 0       if (hue === 360) {         return [value, 0, 0]       } else if (hue &lt; 60) {         return [value, satVal + ligVal, satVal]       } else if (hue &lt; 120) {         return [value - ligVal, value, satVal]       } else if (hue &lt; 180) {         return [satVal, value, satVal + ligVal]       } else if (hue &lt; 240) {         return [satVal, value - ligVal, value]       } else if (hue &lt; 300) {         return [satVal + ligVal, satVal, value]       } else if (hue &lt; 360) {         return [value, satVal, value - ligVal]       } else {         return [0, 0, 0]       }     }   } </code></pre> <h3 id="透明度">透明度</h3> <p>在RGB\HSV\HSL三种颜色模型里，透明度都是独立的一个属性，不会影响到具体颜色的实现，可以单独处理这个值。<br /> 所以，如果我们需要透明度，在布局上可以和色相柱一样，使用长条状的div，通过计算位置比例来计算当前选中的透明度值，布局如下：</p> <pre><code class="language-html">  &lt;div class="div-alpha"&gt;     &lt;!-- 透明柱状 --&gt;     &lt;div id="alphaBar" class="alpha-bar" style="linear-gradient(180deg, #f00, transparent)"&gt;&lt;/div&gt;     &lt;!-- 滑块 --&gt;     &lt;div id="divAlphaSlider" class="div-slider"&gt;&lt;/div&gt;   &lt;/div&gt; </code></pre> <pre><code class="language-css">  .div-alpha {     background-image: linear-gradient(       45deg,#c5c5c5 25%,transparent 0,transparent 75%,#c5c5c5 0,#c5c5c5),linear-gradient(       45deg,#c5c5c5 25%,transparent 0,transparent 75%,#c5c5c5 0,#c5c5c5);   } </code></pre> <p>在计算上，也基本和色相柱一样，只是透明度取值在0-100：</p> <pre><code class="language-js">color.alpha = Math.round(100 - yDiff / alphaBarHEIGHT * 100) / 100 </code></pre> <p>有了透明度的值，获取颜色值时，在RGBA或这HSLA中加入透明度即可。</p> <h2 id="基于hsl的颜色选择器">基于HSL的颜色选择器</h2> <p>上面讲解过HSV和HSL的区别，根据各自的特点，要实现HSL的选择器，只需要进行少许的改动。<br /> 首先，Hue色相和透明度，两者没有区别，一模一样，不需要做任何改动。<br /> 其次，需要改动饱和度和明亮度的颜色面板，HSL在布局时只需要改动一点，即面板的css样式：</p> <pre><code class="language-css">  .color-panel {     position: relative;     height: 200px;     width: 300px;     /*横向X轴饱和度设置为灰的渐变，纵向Y轴设置为白到透明到黑*/     background: linear-gradient(to bottom, #fff 0%, transparent 50%, transparent 50%, #000 100%),        linear-gradient(to right, #808080 0%, transparent 100%);   } </code></pre> <p>改变颜色面板以后，获取HSL的色相、饱和度、亮度、透明度的值的方式，都与在HSV模式下一样。<br /> 注意，这时候获取的HSLA的颜色，如果要使用到RGBA，就需要进行HSL到RGB的转换，转换函数详见<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/jimojianghu/p/15511924.html"  target="_blank"  rel="nofollow"><code>颜色模型的基础知识</code></a>。<br /> 综上，则完成了一个颜色选择器的。</p> <h2 id="使用canvas设置面板">使用canvas设置面板</h2> <p>除了基于div+css布局颜色选择器以外，我们还可以使用canvas来处理颜色选择器。<br /> 在布局上，色相、面板、透明度，都使用canvas来替换，由于canvas也可以使用线性渐变，所以在设置色彩的UI布局上是没有任何问题的。<br /> 在滑块的设计上也大致相同，只需要微小的改动，因为使用canvas以后，获取颜色的方式就不一样了。<br /> 在canvas的色相和面板中，可以直接获取到canvas对应位置的像素点，而该像素点本身就是一个rgba的颜色值。<br /> 所以这个带来的好处就是，<strong>我们可以省略转换过程，而直接获取到可用的颜色值。</strong><br /> 当然，不管是div还是canvas，因为布局方式和获取颜色值的方式不一样，在所能得到的颜色值的数量上会有差别，特别是canvas方式，和画布本身的像素点有关。<br /> 但是，两种方式都可以在几百万以上的颜色值，完全满足我们的需求。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-58487.htm">海拉鲁左上角第二个神庙（海拉鲁丘陵下面神庙）</a></p>
                                        <p>下一个：<a href="/news/article-59329.htm">广州宠物领养平台官网地址电话（广州宠物领养中心官网）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-22544.htm" title="深圳宠物领养公众号有哪些（深圳宠物领养公众号有哪些）">深圳宠物领养公众号有哪些（深圳宠物领养公众号有哪些）</a></li>
                        <li class="py-2"><a href="/news/article-51066.htm" title="蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）">蝴蝶犬幼犬（蝴蝶犬幼犬像土狗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-5-free-v2ray-subscribe.htm" title="「12月5日」最高速度19.8M/S，2024年SSR/Shadowrocket/Clash/V2ray每天更新免费机场订阅链接">「12月5日」最高速度19.8M/S，2024年SSR/Shadowrocket/Clash/V2ray每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-21170.htm" title="动物疫苗间隔时间多长有效期（动物疫苗注射后多久产生抗体）">动物疫苗间隔时间多长有效期（动物疫苗注射后多久产生抗体）</a></li>
                        <li class="py-2"><a href="/news/article-57638.htm" title="动物疫苗过敏反应有哪些症状和表现（打动物疫苗有什么过敏反应）">动物疫苗过敏反应有哪些症状和表现（打动物疫苗有什么过敏反应）</a></li>
                        <li class="py-2"><a href="/news/article-59926.htm" title="兽药厂家联系方式（兽药厂家联系方式电话）">兽药厂家联系方式（兽药厂家联系方式电话）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-8-clash-node.htm" title="「2月8日」最高速度20.5M/S，2025年Clash/Shadowrocket/SSR/V2ray每天更新免费机场订阅链接">「2月8日」最高速度20.5M/S，2025年Clash/Shadowrocket/SSR/V2ray每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-41088.htm" title="动物医院名字怎么取好听点的（动物医院名字怎么取好听点的呢）">动物医院名字怎么取好听点的（动物医院名字怎么取好听点的呢）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-free-shadowrocket-node.htm" title="「1月17日」最高速度21.5M/S，2025年Shadowrocket/SSR/V2ray/Clash每天更新免费机场订阅链接">「1月17日」最高速度21.5M/S，2025年Shadowrocket/SSR/V2ray/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-47045.htm" title="被猫抓伤出一丝丝血要打几针疫苗（被猫抓出血丝了要打狂犬疫苗吗）">被猫抓伤出一丝丝血要打几针疫苗（被猫抓出血丝了要打狂犬疫苗吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">63</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div>
        </section>
    </main>
        <footer class="site-footer">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 col-12">
                    <p class="copyright-text mb-0 me-4">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        SubscribeClashNode订阅节点站 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- JAVASCRIPT FILES -->
    <script src="/assets/website/js/frontend/subscribeclashnode/jquery.min.js"></script>
    <script src="/assets/website/js/frontend/subscribeclashnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/subscribeclashnode/jquery.sticky.js"></script>
    <script src="/assets/website/js/frontend/subscribeclashnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/subscribeclashnode/magnific-popup-options.js"></script>
    <script src="/assets/website/js/frontend/subscribeclashnode/click-scroll.js"></script>
    <script src="/assets/website/js/frontend/subscribeclashnode/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>